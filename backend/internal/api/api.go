// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package api

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// __searchReposInput is used internally by genqlient
type __searchReposInput struct {
	Query  string `json:"query"`
	Limit  int    `json:"limit"`
	Cursor string `json:"cursor"`
}

// GetQuery returns __searchReposInput.Query, and is useful for accessing the field via an interface.
func (v *__searchReposInput) GetQuery() string { return v.Query }

// GetLimit returns __searchReposInput.Limit, and is useful for accessing the field via an interface.
func (v *__searchReposInput) GetLimit() int { return v.Limit }

// GetCursor returns __searchReposInput.Cursor, and is useful for accessing the field via an interface.
func (v *__searchReposInput) GetCursor() string { return v.Cursor }

// searchReposResponse is returned by searchRepos on success.
type searchReposResponse struct {
	// Perform a search across resources, returning a maximum of 1,000 results.
	Search searchReposSearchSearchResultItemConnection `json:"search"`
}

// GetSearch returns searchReposResponse.Search, and is useful for accessing the field via an interface.
func (v *searchReposResponse) GetSearch() searchReposSearchSearchResultItemConnection {
	return v.Search
}

// searchReposSearchSearchResultItemConnection includes the requested fields of the GraphQL type SearchResultItemConnection.
// The GraphQL type's documentation follows.
//
// A list of results that matched against a search query. Regardless of the number
// of matches, a maximum of 1,000 results will be available across all types,
// potentially split across many pages.
type searchReposSearchSearchResultItemConnection struct {
	// A list of edges.
	Edges []searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge `json:"edges"`
}

// GetEdges returns searchReposSearchSearchResultItemConnection.Edges, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnection) GetEdges() []searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge {
	return v.Edges
}

// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge includes the requested fields of the GraphQL type SearchResultItemEdge.
// The GraphQL type's documentation follows.
//
// An edge in a connection.
type searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge struct {
	// The item at the end of the edge.
	Node searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem `json:"-"`
}

// GetNode returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge.Node, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge) GetNode() searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem {
	return v.Node
}

func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge) UnmarshalJSON(b []byte) error {
	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalsearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalsearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge struct {
	Node json.RawMessage `json:"node"`
}

func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge) __premarshalJSON() (*__premarshalsearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge, error) {
	var retval __premarshalsearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge

	{

		dst := &retval.Node
		src := v.Node
		var err error
		*dst, err = __marshalsearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdge.Node: %w", err)
		}
	}
	return &retval, nil
}

// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp includes the requested fields of the GraphQL type App.
// The GraphQL type's documentation follows.
//
// A GitHub App.
type searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp struct {
	Typename string `json:"__typename"`
}

// GetTypename returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp.Typename, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp) GetTypename() string {
	return v.Typename
}

// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion includes the requested fields of the GraphQL type Discussion.
// The GraphQL type's documentation follows.
//
// A discussion in a repository.
type searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion.Typename, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion) GetTypename() string {
	return v.Typename
}

// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue includes the requested fields of the GraphQL type Issue.
// The GraphQL type's documentation follows.
//
// An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
type searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue.Typename, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue) GetTypename() string {
	return v.Typename
}

// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing includes the requested fields of the GraphQL type MarketplaceListing.
// The GraphQL type's documentation follows.
//
// A listing in the GitHub integration marketplace.
type searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing struct {
	Typename string `json:"__typename"`
}

// GetTypename returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing.Typename, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing) GetTypename() string {
	return v.Typename
}

// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An account on GitHub, with one or more owners, that has repositories, members and teams.
type searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization struct {
	Typename string `json:"__typename"`
}

// GetTypename returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization.Typename, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization) GetTypename() string {
	return v.Typename
}

// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest includes the requested fields of the GraphQL type PullRequest.
// The GraphQL type's documentation follows.
//
// A repository pull request.
type searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest struct {
	Typename string `json:"__typename"`
}

// GetTypename returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest.Typename, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest) GetTypename() string {
	return v.Typename
}

// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository contains the content for a project.
type searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository struct {
	Typename string `json:"__typename"`
	// The Node ID of the Repository object
	Id string `json:"id"`
	// Returns a count of how many stargazers there are on this object
	StargazerCount int `json:"stargazerCount"`
	// The description of the repository.
	Description string `json:"description"`
	// The repository's name with owner.
	NameWithOwner string `json:"nameWithOwner"`
	// The primary language of the repository's code.
	PrimaryLanguage searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage `json:"primaryLanguage"`
}

// GetTypename returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.Typename, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetTypename() string {
	return v.Typename
}

// GetId returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.Id, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetId() string {
	return v.Id
}

// GetStargazerCount returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.StargazerCount, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetStargazerCount() int {
	return v.StargazerCount
}

// GetDescription returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.Description, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetDescription() string {
	return v.Description
}

// GetNameWithOwner returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.NameWithOwner, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetNameWithOwner() string {
	return v.NameWithOwner
}

// GetPrimaryLanguage returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository.PrimaryLanguage, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) GetPrimaryLanguage() searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage {
	return v.PrimaryLanguage
}

// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage includes the requested fields of the GraphQL type Language.
// The GraphQL type's documentation follows.
//
// Represents a given language found in repositories.
type searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage struct {
	// The name of the current language.
	Name string `json:"name"`
}

// GetName returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage.Name, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepositoryPrimaryLanguage) GetName() string {
	return v.Name
}

// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem includes the requested fields of the GraphQL interface SearchResultItem.
//
// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem is implemented by the following types:
// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp
// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion
// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue
// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing
// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization
// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest
// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository
// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser
// The GraphQL type's documentation follows.
//
// The results of a search.
type searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem interface {
	implementsGraphQLInterfacesearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp) implementsGraphQLInterfacesearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}

func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion) implementsGraphQLInterfacesearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}

func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue) implementsGraphQLInterfacesearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}

func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing) implementsGraphQLInterfacesearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}

func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization) implementsGraphQLInterfacesearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}

func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest) implementsGraphQLInterfacesearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}

func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository) implementsGraphQLInterfacesearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}

func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser) implementsGraphQLInterfacesearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem() {
}

func __unmarshalsearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem(b []byte, v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "App":
		*v = new(searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp)
		return json.Unmarshal(b, *v)
	case "Discussion":
		*v = new(searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion)
		return json.Unmarshal(b, *v)
	case "Issue":
		*v = new(searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue)
		return json.Unmarshal(b, *v)
	case "MarketplaceListing":
		*v = new(searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization)
		return json.Unmarshal(b, *v)
	case "PullRequest":
		*v = new(searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest)
		return json.Unmarshal(b, *v)
	case "Repository":
		*v = new(searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing SearchResultItem.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem: "%v"`, tn.TypeName)
	}
}

func __marshalsearchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem(v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem) ([]byte, error) {
	var typename string
	switch v := (*v).(type) {
	case *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp:
		typename = "App"

		result := struct {
			TypeName string `json:"__typename"`
			*searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeApp
		}{typename, v}
		return json.Marshal(result)
	case *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion:
		typename = "Discussion"

		result := struct {
			TypeName string `json:"__typename"`
			*searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeDiscussion
		}{typename, v}
		return json.Marshal(result)
	case *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue:
		typename = "Issue"

		result := struct {
			TypeName string `json:"__typename"`
			*searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeIssue
		}{typename, v}
		return json.Marshal(result)
	case *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing:
		typename = "MarketplaceListing"

		result := struct {
			TypeName string `json:"__typename"`
			*searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeMarketplaceListing
		}{typename, v}
		return json.Marshal(result)
	case *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeOrganization
		}{typename, v}
		return json.Marshal(result)
	case *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest:
		typename = "PullRequest"

		result := struct {
			TypeName string `json:"__typename"`
			*searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodePullRequest
		}{typename, v}
		return json.Marshal(result)
	case *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository:
		typename = "Repository"

		result := struct {
			TypeName string `json:"__typename"`
			*searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeRepository
		}{typename, v}
		return json.Marshal(result)
	case *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeSearchResultItem: "%T"`, v)
	}
}

// searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser struct {
	Typename string `json:"__typename"`
}

// GetTypename returns searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser.Typename, and is useful for accessing the field via an interface.
func (v *searchReposSearchSearchResultItemConnectionEdgesSearchResultItemEdgeNodeUser) GetTypename() string {
	return v.Typename
}

// The query executed by searchRepos.
const searchRepos_Operation = `
query searchRepos ($query: String!, $limit: Int!, $cursor: String!) {
	search(type: REPOSITORY, query: $query, first: $limit, after: $cursor) {
		edges {
			node {
				__typename
				... on Repository {
					id
					stargazerCount
					description
					nameWithOwner
					primaryLanguage {
						name
					}
				}
			}
		}
	}
}
`

func searchRepos(
	ctx_ context.Context,
	client_ graphql.Client,
	query string,
	limit int,
	cursor string,
) (data_ *searchReposResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "searchRepos",
		Query:  searchRepos_Operation,
		Variables: &__searchReposInput{
			Query:  query,
			Limit:  limit,
			Cursor: cursor,
		},
	}

	data_ = &searchReposResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
